class AuthorizationController < ApplicationController
  def oauth_create
    auth = request.env["omniauth.auth"]
    user_auth  = Authorization.where(:uid => auth['uid'], :provider => auth['provider']).first
    if user_auth 
      @user = user_auth.user 
    else
      access_token = auth['credentials']['token']
      access_token_secret = auth['credentials']['secret']
      @weibo_user = Authorization.get_user_details(access_token, access_token_secret)
      count = User.count 
      @user = User.build(:email => "user#{count+1}@haoxiangwan.net", 
                         :password => '3275315321',
                         :password_confirmation => '3275315321' )
      name = @weibo_user['screen_name']
      location_info = @weibo_user['location']
      city_name = location_info.split(' ')[1];
      city  = City.find_by_name(city_name)
      city_id = city ? city.id : 1 
      location = Location.create(:city_id => city_id)
      if @user.save
        @user.profile.name = name
        if @weibo_user['gender'] == 'm'
          @user.profile.gender = 1 
        else
          @user.profile.gender = 0 
        end

        @user.profile.location = location 
        @user.profile.save
        @user.authorizations.find_or_create_by_params({
          :provider => auth['provider'], 
          :uid => auth['uid'],
          :access_token => auth['credentials']['token'],
          :access_token_secret => auth['credentials']['secret']
        })
      else
      end
    end
    sign_in_and_redirect(:user, @user) 
  end

  def oauth_destroy
  end

  def bind_account
    puts '*********'
    puts '&&&&&&&&&'
    puts current_user
    auth = current_user.authorizations.first
    @weibo_user = Authorization.get_user_details(auth.access_token, auth.access_token_secret) 
  end 

  def bind_new_account
    email = params[:email]
    password = params[:password] 
    @user = current_user
    @user.update_attributes(:email => email)
    @user.update_with_password(:current_password => '3275315321',
                               :password => password,
                               :password_confirmation => password)
    puts '***************************'
    puts @user.id
    puts @user.email
    sign_in(@user, :bypass => true)
    redirect_to :back
  end

end
