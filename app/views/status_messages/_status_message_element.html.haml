.stream_element.pic_container{ :id => post.id }
  .author_avatar
    = person_image_link(post.author,:thumb_small) 
  .element_body
    .content
      .from
        = person_link(post.author, :class => 'author')
      .post_content
        - topic = post.item_topic
        - if topic 
          = link_to "##{topic.name}#", item_topic_path(topic), :class => 'topic_name'  
        = post_content_tag(post)
      .photos
        = render 'photos/photos_container',:photos => post.pics
      .content_info
        %span.time.timeago{:datetime => post.created_at,:style=>"font-size: 11px"}
          =how_long_ago( post )
        %span.action
          =link_to "评论","#",:class => "replay"
      
    .action
      - if post.author.id == current_user.person.id
        .delete
          = link_to image_tag("/images/ui/delete.png" ),post,:remote => true,:method => "delete",:confirm => "确定删除？"
    = render "comments/comments", :post => post, :comments => post.comments
    .comment_form{:class => ('hide' if post.comments.size == 0)}
      .author_avatar
        = person_image_link(current_user,:thumb_small)
      = form_for([post,Comment.new], :remote => true) do |f|
        .field
          = f.text_area :content, :rows => 2
        .comment_button.hide
          = f.submit "回复", :class => 'glass_button inline',"data-disable-with" => t("posting")
          .cancle.inline.glass_button
            = "取消"


